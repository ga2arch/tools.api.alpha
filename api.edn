{:schema-version "0.0.1"
 :service        "api-service"
 :base-path      {:test "http://test.api.com"
                  :stag "http://test.api.com"
                  :prod "http://test.api.com"}
 :description    "blah blah blah"

 :include        ["global.edn"]

 :types          {ApiRequestBean
                  {id          :type/string
                   session_id  :type/uuid
                   insert_date :type/date}

                  ApiResponseBean
                  {id          :type/string
                   session_id  :type/uuid
                   insert_date :type/date}

                  (paginated-list T)
                  {has_more :type/boolean
                   data     [T]}

                  error
                  {code    :type/string
                   message :type/string}}

 :routes         {[:context :v2 "/merchant"]
                  {:include "merchant.edn"}

                  [:context :v1 "/merchant/merchant"]
                  {:path-params {uid [:type/uuid "the uid of the merchant"]}
                   :consumes     [:application/json]
                   :produces     [:application/json]
                   :routes      {[:POST "/requests/{request_uid}"]
                                 {:plugins      {:retrofit {:name   "topkek"
                                                            :return "SdkCall<Optional<_>>"}}
                                  :description  "post the request"
                                  :path-params  {request_uid [:type/uuid "the second uid of the request"]}
                                  :query-params {starting_after [:type/string "the starting after" :required]
                                                 limit          :type/integer}
                                  :body         ApiRequestBean
                                  :return       {200 [{kek
                                                       {:id          :type/string
                                                        :session_id  :type/uuid
                                                        :insert_date :type/date}}
                                                      "description"]

                                                 201 :type/void

                                                 303 [(paginated-list ApiResponseBean)
                                                      "random code"]

                                                 404 [error "PA_004 entity not found"]}}

                                 [:GET "/requests/{request_uid}"]
                                 {:plugins      {:retrofit {:name   "getRequests"
                                                            :return "SdkCall<_>"}}
                                  :description  "get the requests"
                                  :path-params  {request_uid [:type/uuid "the second uid of the request"]}
                                  :query-params {starting_after [:type/string "the starting after" :required]
                                                 limit          :type/integer}
                                  :body         :types/ApiRequestBean
                                  :return       {200 [(paginated-list ApiResponseBean)
                                                      "random code"]}}

                                 [:GET "/{merchant_uid}"]
                                 {:plugins     {:retrofit {:name   "getMerchants"
                                                           :return "SdkCall<_>"}}
                                  :description "get the merchants"
                                  :path-params {merchant_uid [:type/uuid "the uid of the merchant"]}
                                  :body        :types/ApiRequestBean
                                  :return      {200 {MerchantBean
                                                     {:id :type/uuid}}}}

                                 [:GET "/request/{request_uid}"]
                                 {:plugins     {:retrofit {:name   "getRequests"
                                                           :return "SdkCall<_>"}}
                                  :description "get the requests"
                                  :include     ("pagination.edn" ApiRequestBean)
                                  :path-params {request_uid [:type/uuid "the second uid of the request"]}
                                  :query-params {kek [:type/string "the starting after" :required]}

                                  }}}}}